name: Publish - sdk playwright

on:
  workflow_dispatch:
    inputs:
      version:
        description: version type
        type: choice
        options: [patch, minor, major]
        default: patch
      multienv:
        description: test on multiple environments
        type: boolean
        default: true
  workflow_call:
    inputs:
      version:
        description: version type
        type: string
        default: patch
      multienv:
        description: test on multiple environments
        type: boolean
        default: false
    secrets:
      NPM_TOKEN:
        required: true
      APPLITOOLS_API_KEY:
        required: true
      APPLITOOLS_API_KEY_SDK:
        required: true
      APPLITOOLS_API_KEY_READ:
        required: true
      AZURE_STORAGE_CONNECTION_STRING:
        required: true
env:
  PACKAGE_DIR: eyes-playwright
  FORCE_COLOR: 3
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  APPLITOOLS_API_KEY: ${{secrets.APPLITOOLS_API_KEY}}
  APPLITOOLS_API_KEY_SDK: ${{secrets.APPLITOOLS_API_KEY_SDK}}
  APPLITOOLS_API_KEY_READ: ${{secrets.APPLITOOLS_API_KEY_READ}}
  AZURE_STORAGE_CONNECTION_STRING: ${{secrets.AZURE_STORAGE_CONNECTION_STRING}}
jobs:
  verify:
    name: Verification
    runs-on: ubuntu-latest
    outputs:
      environments: ${{steps.prepare.outputs.environments}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org
      - name: Run pre-publish verifications
        shell: bash
        working-directory: ./packages/${{env.PACKAGE_DIR}}
        run: |
          yarn install
          npx bongo release-pre-check --skip-deps --skip-commit --skip-verify-installed-versions
          npx bongo verify-changelog
      - name: Prepare environments
        id: prepare
        shell: bash
        run: |
          if [ ${{inputs.multienv || github.event.inputs.multienv}} = true ]
          then
            echo "::set-output name=environments::[{\"node-version\":16}, {\"node-version\":14}, {\"node-version\":12}]"
          else
            echo "::set-output name=environments::[{\"node-version\":16}]"
          fi
  test:
    needs: [verify]
    strategy:
      max-parallel: 3
      matrix:
        include: ${{fromJSON(needs.verify.outputs.environments)}}
    name: 'Test (node: ${{matrix.node-version}})'
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
          registry-url: https://registry.npmjs.org
      - name: Run tests
        uses: ./.github/actions/tests
        with:
          package: ${{env.PACKAGE_DIR}}
      - name: Upload testing artifacts
        uses: actions/upload-artifact@v2
        with:
          name: playwright-test-results-node-${{matrix.node-version}}
          retention-days: 2
          path: |
            packages/${{env.PACKAGE_DIR}}/coverage-tests-metadata.json
            packages/${{env.PACKAGE_DIR}}/coverage-test-report.xml
  publish:
    needs: [test]
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org
      - name: Download testing artifacts
        uses: actions/download-artifact@v2
        with:
          name: playwright-test-results-node-16
          path: packages/${{env.PACKAGE_DIR}}
      - name: Publish to NPM
        uses: ./.github/actions/publish
        with:
          package: ${{env.PACKAGE_DIR}}
          version: ${{inputs.version || github.event.inputs.version}}