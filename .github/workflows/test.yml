name: CI

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches: [chore/release-please]

concurrency:
  group: ${{github.ref}}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3
  DISPLAY: ':99'
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  APPLITOOLS_API_KEY: ${{secrets.APPLITOOLS_API_KEY}}
  APPLITOOLS_API_KEY_READ: ${{secrets.APPLITOOLS_API_KEY_READ}}
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  BROWSERSTACK_USERNAME: applitools
  BROWSERSTACK_ACCESS_KEY: ${{secrets.BROWSERSTACK_ACCESS_KEY}}

jobs:
  setup:
    name: Setup
    if: ${{github.actor != 'dependabot[bot]' && !github.event.pull_request.draft}}
    runs-on: ubuntu-latest
    outputs:
      builds: ${{steps.setup.outputs.builds}}
      tests: ${{steps.setup.outputs.tests}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup
        uses: ./.github/actions/setup
        id: setup
        with:
          packages: changed
          ci: true
          link: true
  
  build:
    needs: [setup]
    strategy:
      fail-fast: false
      matrix: 
        include: ${{fromJSON(needs.setup.outputs.builds)}}
    name: Build / ${{matrix.display-name}}
    timeout-minutes: 20
    runs-on: ${{matrix.runner || 'ubuntu-latest'}}
    container: ${{matrix.container}}
    env: ${{matrix.env}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version || 'lts/*'}}
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Build
        uses: ./.github/actions/js/build
        with:
          working-directory: ${{matrix.working-directory}}
          shell: ${{matrix.shell || 'bash'}}
          build-type: ${{matrix.build-type}}
          links: ${{matrix.links}}
      - name: Save build artifacts
        if: ${{matrix.cache}}
        uses: ./.github/actions/cache/save
        with: 
          cache: ${{toJSON(matrix.cache)}}

  test:
    needs: [setup, build]
    strategy:
      fail-fast: false
      matrix: 
        include: ${{fromJSON(needs.setup.outputs.tests)}}
    name: Test / ${{matrix.display-name}}
    timeout-minutes: 60
    runs-on: ${{matrix.runner || 'ubuntu-latest'}}
    container: ${{matrix.container}}
    env: ${{matrix.env}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.params.node-version || 'lts/*'}}
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - run: 
      - name: Restore build artifacts
        if: ${{matrix.cache}}
        uses: ./.github/actions/cache/restore
        with: 
          cache: ${{toJSON(matrix.cache)}}
      - name: Run tests
        uses: ./.github/actions/js/test
        with:
          working-directory: ${{matrix.working-directory}}
          shell: ${{matrix.shell || 'bash'}}
          framework-version: ${{matrix.framework-version}}
          test-type: ${{matrix.test-type}}
          build-type: ${{matrix.build-type}}
          setup-type: ${{matrix.setup-type}}
          links: ${{matrix.links}}
          parallel: ${{matrix.parallel}}
      - name: Save testing artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.artifact-name}}
          retention-days: 2
          if-no-files-found: ignore
          path: ${{matrix.working-directory}}/logs/**/*
