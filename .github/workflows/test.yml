name: Test packages

on:
  pull_request:
  workflow_dispatch:
    inputs:
      packages:
        description: package names (aliases and variations)
        type: string
        required: true
      test-type:
        description: testing type (unit, it, e2e, coverage)
        type: string
        required: false
      build-type:
        description: build type
        type: string
        required: false
      setup-type:
        description: setup type
        type: string
        required: false
      links:
        description: linked package names
        required: false
      grep:
        description: grep pattern
        required: false
env:
  FORCE_COLOR: 3
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  DISPLAY: ':99'
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      packages: ${{steps.setup.outputs.packages}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup
        uses: ./.github/actions/parser
        id: setup
        with:
          packages: ${{github.event.inputs.packages}}
          allow-variations: true
  test:
    needs: setup
    strategy:
      fail-fast: false
      matrix: 
        include: ${{fromJSON(needs.setup.outputs.packages)}}
    runs-on: ${{matrix.os}}
    name: ${{matrix.displayName}}
    env: ${{matrix.env}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node}}
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Setup xvfb
        if: ${{matrix.xvfb}}
        run: |
          sudo apt-get install -y xvfb
          Xvfb -ac $DISPLAY -screen 0 1280x1024x16 &
      - name: Run tests
        uses: ./.github/actions/tests
        with:
          working-directory: ./js/packages/${{matrix.dirname}}
          test-type: ${{github.event_name == 'workflow_dispatch' && github.event.inputs.test-type || 'sanity'}}
          build-type: ${{github.event.inputs.build-type}}
          setup-type: ${{github.event.inputs.setup-type}}
          links: ${{matrix.links || github.event.inputs.links}}'
          grep: ${{github.event.inputs.grep}}
        env:
          APPLITOOLS_API_KEY: ${{secrets.APPLITOOLS_API_KEY}}
          APPLITOOLS_API_KEY_SDK: ${{secrets.APPLITOOLS_API_KEY_SDK}}
          APPLITOOLS_API_KEY_READ: ${{secrets.APPLITOOLS_API_KEY_READ}}
          SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
          SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
          AZURE_STORAGE_CONNECTION_STRING: ${{secrets.AZURE_STORAGE_CONNECTION_STRING}}
      - name: Save testing artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage-tests-report-${{matrix.name}}
          retention-days: 2
          path: |
            ./js/packages/${{matrix.dirname}}/coverage-tests-metadata.json
            ./js/packages/${{matrix.dirname}}/coverage-test-report.xml
