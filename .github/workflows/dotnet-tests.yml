name: "DotNet - Tests"

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    paths:
      - 'dotnet/**'
  workflow_call:
    inputs:
      ref:
        description: branch to test
        required: false
        type: string
      core_version:
        description: core version
        required: false
        type: string
        default: "3.8.1"
      generic:
        type: boolean
        required: false
        default: true
      cross_platform:
        type: boolean
        required: false
        default: true

env:
  DRIVER_PATH: /usr/bin
  APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
  APPLITOOLS_API_KEY_READ: ${{ secrets.APPLITOOLS_API_KEY_READ }}
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  CORE_VERSION: ${{ inputs.core_version || '3.8.1' }}

jobs:

  dotnet-tests:
    if: ${{ github.event_name == 'pull_request' || inputs.cross_platform }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0"
      - run: dotnet test dotnet/Tests/Eyes.Selenium.UnitTests/Eyes.Selenium.UnitTests.csproj

  dotnet-tests-alpine:
    if: ${{ github.event_name == 'pull_request' || inputs.cross_platform }}
    runs-on: ubuntu-latest
    container: "alpine:latest"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - run: apk add bash icu-libs krb5-libs libgcc libintl libssl1.1 libstdc++ zlib curl
      - run: apk add chromium chromium-chromedriver xvfb xvfb-run
      - run: mkdir -p /usr/share/dotnet && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet
      - name: Install dotnet and run Alpine tests
        run: |
          cd dotnet
          chmod +x ./dotnet-install.sh
          ./dotnet-install.sh -c 6.0 --install-dir /usr/share/dotnet
          wget https://github.com/applitools/eyes.sdk.javascript1/releases/download/js%2Fcore%40$CORE_VERSION/core-alpine
          mkdir -p ./Eyes.Image.Core.DotNet/runtimes/linux-alpine/native/
          mv core-alpine ./Eyes.Image.Core.DotNet/runtimes/linux-alpine/native/
          dotnet test Tests/Eyes.Selenium.UnitTests/Eyes.Selenium.UnitTests.csproj

  dotnet-test-generated:
    if: ${{ github.event_name == 'pull_request' || inputs.generic }}
    strategy:
      fail-fast: false
      matrix:
          sdk: [images, appium, appium2, selenium3, selenium4, playwright]
  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0"
      - name: Run ${{ matrix.sdk }} coverage tests
        run: |
          cd dotnet
          chmod +x ./download_core_linux.sh && ./download_core_linux.sh
          chmod +x ./genericTests_${{ matrix.sdk }}.sh && ./genericTests_${{ matrix.sdk }}.sh
      - uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: |
            dotnet/coverage-tests/coverage-test-*.xml
            dotnet/coverage-tests/meta.json
