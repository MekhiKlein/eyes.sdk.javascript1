name: Publish - core

on:
  workflow_dispatch:
    inputs:
      version:
        description: version type
        type: choice
        options: [patch, minor, major]
        default: patch
  workflow_call:
    inputs:
      version:
        description: version type
        type: string
        default: patch
    secrets:
      NPM_TOKEN:
        required: true
      APPLITOOLS_API_KEY:
        required: true
      APPLITOOLS_API_KEY_JSSDK:
        required: true
      APPLITOOLS_API_KEY_READ:
        required: true
      SAUCE_USERNAME:
        required: true
      SAUCE_ACCESS_KEY:
        required: true
      UNIVERSAL_SLACK_WEBHOOK_URL:
        required: true

env:
  FORCE_COLOR: 3
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  APPLITOOLS_API_KEY: ${{secrets.APPLITOOLS_API_KEY_JSSDK}}
  APPLITOOLS_API_KEY_READ: ${{secrets.APPLITOOLS_API_KEY_READ}}
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
  BROWSERSTACK_USERNAME: applitools
  BROWSERSTACK_ACCESS_KEY: ${{secrets.BROWSERSTACK_ACCESS_KEY}}

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      branch: ${{steps.version.outputs.branch}}
      version: ${{steps.version.outputs.version}}
      tag: ${{steps.version.outputs.tag}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Version
        id: version
        uses: ./.github/actions/version
        with:
          working-directory: ./js/packages/core
          version: ${{inputs.version || github.event.inputs.version}}
  build:
    needs: [prepare]
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x64
            runner: ubuntu-latest
          - arch: arm64
            runner: buildjet-2vcpu-ubuntu-2204-arm
    name: 'Build (arch: ${{matrix.arch}})'
    runs-on: ${{matrix.runner}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          ref: ${{needs.prepare.outputs.branch}}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Build
        working-directory: ./js/packages/core
        run: |
          echo //registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}} > $HOME/.npmrc
          export PUPPETEER_SKIP_DOWNLOAD=true
          yarn --cwd ../../ install
          yarn install
          yarn deps
          rm -rf $HOME/.npmrc
          yarn build:${{matrix.arch}}
      - name: Upload building artifacts
        uses: actions/upload-artifact@v3
        with:
          name: core-${{needs.prepare.outputs.version}}-${{matrix.arch}}
          if-no-files-found: error
          retention-days: 2
          path:  |
            ./js/packages/core/dist
            ./js/packages/core/bin
  test:
    needs: [prepare, build]
    strategy:
      matrix:
        node-version: ['14', '16', '18']
    name: 'Test (node: ${{matrix.node-version}})'
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Download building artifacts
        uses: actions/download-artifact@v3
        with:
          name: core-${{needs.prepare.outputs.version}}-x64
          path: ./js/packages/core
      - name: Run tests
        uses: ./.github/actions/tests
        with:
          working-directory: ./js/packages/core
  test-bin:
    needs: [prepare, build]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: alpine
            arch: x64
            runner: ubuntu-latest
            container: node:lts-alpine # not just "alpine" because it is not possible to setup nodejs in a regular way
            shell: ash -eo pipefail {0}
          - os: linux
            arch: x64
            runner: ubuntu-latest
            shell: bash
          - os: linux
            arch: arm64
            runner: buildjet-2vcpu-ubuntu-2204-arm
            shell: bash
          - os: windows
            arch: x64
            runner: windows-latest
            shell: bash
          - os: macos
            arch: x64
            runner: macos-latest
            shell: bash
    name: 'Test bin (os: ${{matrix.os}}, arch: ${{matrix.arch}})'
    runs-on: ${{matrix.runner}}
    container: ${{matrix.container}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          ref: ${{needs.prepare.outputs.branch}}
      - name: Setup Node.js
        if: ${{matrix.arch == 'x64'}}
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Download building artifacts
        uses: actions/download-artifact@v3
        with:
          name: core-${{needs.prepare.outputs.version}}-${{matrix.arch}}
          path: ./js/packages/core
      - name: Run tests x64
        if: ${{matrix.arch == 'x64'}}
        uses: ./.github/actions/tests
        with:
          shell: ${{matrix.shell}}
          working-directory: ./js/packages/core
          build-type: none
          setup-type: none
          test-type: bin
      - name: Run tests arm64
        if: ${{matrix.arch == 'arm64'}}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: none
          distro: none
          base_image: arm64v8/node:lts
          githubToken: ${{github.token}}
          dockerRunArgs: |
            --volume "${PWD}/js/packages/core/:/src"
          shell: /bin/sh
          install: |
            apt-get update -q -y
            apt-get install -q -y curl zip tar
          run: |
            cd /src
            echo //registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}} > $HOME/.npmrc
            export PUPPETEER_SKIP_DOWNLOAD=true 
            yarn install
            rm -rf $HOME/.npmrc
            yarn test:bin
  publish:
    needs: [prepare, test, test-bin]
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          ref: ${{needs.prepare.outputs.branch}}
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Download building artifacts arm64
        uses: actions/download-artifact@v3
        with:
          name: core-${{needs.prepare.outputs.version}}-arm64
          path: ./js/packages/core
      - name: Download building artifacts x64
        uses: actions/download-artifact@v3
        with:
          name: core-${{needs.prepare.outputs.version}}-x64
          path: ./js/packages/core
      - name: Create archives
        shell: bash
        working-directory: ./js/packages/core
        run: yarn build:bin:zip && yarn build:bin:tgz
      - name: Publish to NPM
        id: publish
        uses: ./.github/actions/publish
        with:
          working-directory: ./js/packages/core
          skip-build: true
      - name: Publish to GitHub
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ${{steps.publish.outputs.changelog}}
          tag_name: ${{needs.prepare.outputs.tag}}
          name: ${{needs.prepare.outputs.tag}}
          files: |
            ./js/packages/core/bin/core-alpine
            ./js/packages/core/bin/core-linux
            ./js/packages/core/bin/core-linux-arm64
            ./js/packages/core/bin/core-macos
            ./js/packages/core/bin/core-win.exe
            ./js/packages/core/bin/core.zip
            ./js/packages/core/bin/core.tar.gz
      - name: Send slack notification
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "#00a398",
                  "blocks": [
                    {
                      "type":"section",
                      "text": {"type": "mrkdwn", "text": "@channel *Universal Core* has been released under the tag <https://github.com/applitools/eyes.sdk.javascript1/releases/tag/${{needs.prepare.outputs.tag}}|${{needs.prepare.outputs.tag}}> üéâ üéä ü•≥"}
                    },
                    {
                      "type": "header",
                      "text": {"type": "plain_text", "text": "Changelog"}
                    },
                    {
                      "type":"section",
                      "text": {"type": "mrkdwn", "text": ${{toJSON(steps.publish.outputs.changelog)}}}
                    },
                    {"type": "divider"},
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download for Mac (amd) üçé"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/core-macos"
                        },
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download for Windows (amd) ü™ü"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/core-win.exe"
                        },
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download for Linux (amd) üêß"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/core-linux"
                        },
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download for Linux (arm) üêß"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/core-linux-arm64"
                        },
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download for Alpine (amd) üèîÔ∏è"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/core-alpine"
                        },
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download archive üóÉÔ∏è"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/core.zip"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{secrets.UNIVERSAL_SLACK_WEBHOOK_URL}}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
