name: Publish (do not use)

on:
  workflow_dispatch:
    inputs:
      packages:
        description: package names (aliases)
        required: true
      version:
        description: version type
        type: choice
        options: [ patch, minor, major ]
        default: patch
      allow-cascading:
        description: include dependencies
        type: boolean
        default: true
      only-changed:
        description: include only packages with new commits
        type: boolean
        default: true
env:
  CVG_TESTS_REMOTE: http://localhost:4444/wd/hub
  CVG_TESTS_EG_REMOTE: ${{secrets.CVG_TESTS_EG_REMOTE}}
  APPLITOOLS_API_KEY: ${{secrets.APPLITOOLS_API_KEY}}
  APPLITOOLS_API_KEY_SDK: ${{secrets.APPLITOOLS_API_KEY_SDK}}
  APPLITOOLS_API_KEY_READ: ${{secrets.APPLITOOLS_API_KEY_READ}}
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  AZURE_STORAGE_CONNECTION_STRING: ${{secrets.AZURE_STORAGE_CONNECTION_STRING}}
  FORCE_COLOR: 3
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      packages: ${{steps.setup.outputs.packages}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/parser
        id: setup
        with:
          packages: ${{github.event.inputs.packages}}
          allow-cascading: ${{github.event.inputs.allow-cascading}}
          only-changed: ${{github.event.inputs.only-changed}}
          release-version: ${{github.event.inputs.version}}

  # INTERNAL
  types:
    needs: [ setup ]
    if: ${{fromJSON(needs.setup.outputs.packages).types}}
    name: types
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-types.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).types)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  utils:
    needs: [ setup ]
    if: ${{fromJSON(needs.setup.outputs.packages).utils}}
    name: utils
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-utils.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).utils)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  logger:
    needs: [ setup, utils ]
    if: ${{fromJSON(needs.setup.outputs.packages).logger}}
    name: logger
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-logger.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).logger)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  snippets:
    needs: [ setup ]
    if: ${{fromJSON(needs.setup.outputs.packages).snippets}}
    name: snippets
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-snippets.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).snippets)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  screenshoter:
    needs:
      [
        setup,
        logger,
        snippets,
        utils,
        driver,
        spec-webdriverio,
        test-utils
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).screenshoter}}
    name: screenshoter
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-screenshoter.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).screenshoter)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  driver:
    needs: [ setup, logger, snippets, types, utils ]
    if: ${{fromJSON(needs.setup.outputs.packages).driver}}
    name: driver
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-driver.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).driver)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}

  # CORE
  core:
    needs:
      [
        setup,
        driver,
        eg-client,
        logger,
        screenshoter,
        snippets,
        types,
        utils,
        spec-selenium,
        test-server,
        test-utils,
        ufg-client
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).core}}
    name: core
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-core.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).core)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  ufg-client:
    needs: [ setup, core, logger, test-server, test-utils, utils ]
    if: ${{fromJSON(needs.setup.outputs.packages).ufg-client}}
    name: ufg-client
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-ufg-client.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).ufg-client)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  eg-client:
    needs: [ setup, logger, utils ]
    if: ${{fromJSON(needs.setup.outputs.packages).eg-client}}
    name: eg-client
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-eg-client.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).eg-client)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  universal:
    needs:
      [
        setup,
        eg-client,
        core,
        logger,
        utils,
        ufg-client,
        test-utils,
        types
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).universal}}
    name: universal
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-universal.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).universal)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  api:
    needs: [ setup, logger, types, utils ]
    if: ${{fromJSON(needs.setup.outputs.packages).api}}
    name: api
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-api.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).api)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}

  # SPEC DRIVERS
  spec-playwright:
    needs: [ setup, types, utils, test-utils ]
    if: ${{fromJSON(needs.setup.outputs.packages).spec-playwright}}
    name: spec-playwright
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-spec-playwright.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).spec-playwright)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  spec-puppeteer:
    needs: [ setup, types, utils, test-utils ]
    if: ${{fromJSON(needs.setup.outputs.packages).spec-puppeteer}}
    name: spec-puppeteer
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-spec-puppeteer.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).spec-puppeteer)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  spec-selenium:
    needs: [ setup, types, utils, test-utils ]
    if: ${{fromJSON(needs.setup.outputs.packages).spec-selenium}}
    name: spec-selenium
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-spec-selenium.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).spec-selenium)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  spec-webdriverio:
    needs: [ setup, types, utils, test-utils ]
    if: ${{fromJSON(needs.setup.outputs.packages).spec-webdriverio}}
    name: spec-webdriverio
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-spec-webdriverio.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).spec-webdriverio)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}

  # SDKS
  playwright:
    needs:
      [
        setup,
        api,
        core,
        spec-playwright,
        ufg-client,
        test-utils
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).playwright}}
    name: playwright
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-playwright.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).playwright)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  puppeteer:
    needs:
      [
        setup,
        api,
        core,
        spec-puppeteer,
        ufg-client,
        test-utils
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).puppeteer}}
    name: puppeteer
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-puppeteer.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).puppeteer)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  webdriverio:
    needs:
      [
        setup,
        api,
        core,
        spec-webdriverio,
        ufg-client,
        test-utils
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).webdriverio}}
    name: webdriverio
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-webdriverio.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).webdriverio)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  selenium:
    needs:
      [
        setup,
        api,
        core,
        spec-selenium,
        ufg-client,
        test-utils
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).selenium}}
    name: selenium
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-selenium.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).selenium)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  protractor:
    needs:
      [
        setup,
        api,
        core,
        types,
        utils,
        ufg-client,
        test-utils
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).protractor}}
    name: protractor
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-protractor.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).protractor)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  nightwatch:
    needs:
      [
        setup,
        api,
        core,
        types,
        utils,
        ufg-client,
        test-utils
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).nightwatch}}
    name: nightwatch
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-nightwatch.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).nightwatch)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  testcafe:
    needs:
      [
        setup,
        api,
        core,
        utils,
        ufg-client,
        test-server,
        test-utils
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).testcafe}}
    name: testcafe
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-testcafe.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).testcafe)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  cypress:
    needs:
      [
        setup,
        api,
        universal,
        logger,
        ufg-client,
        test-server,
        test-utils,
        types,
        utils
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).cypress}}
    name: cypress
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-cypress.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).cypress)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  browser-extension:
    needs:
      [
        setup,
        core,
        utils,
        ufg-client,
        spec-playwright,
        test-utils
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).browser-extension}}
    name: browser-extension
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-browser-extension.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).browser-extension)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  storybook:
    needs:
      [
        setup,
        driver,
        core,
        logger,
        spec-puppeteer,
        test-server,
        utils,
        ufg-client
      ]
    if: ${{fromJSON(needs.setup.outputs.packages).storybook}}
    name: storybook
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-storybook.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).storybook)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}

  # SDK WRAPPERS
  webdriverio-service:
    needs: [ setup, webdriverio, test-utils ]
    if: ${{fromJSON(needs.setup.outputs.packages).webdriverio-service}}
    name: webdriverio-service
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-webdriverio-service.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).webdriverio-service)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}

  # TESTING BASE
  test-utils:
    needs: [ setup ]
    if: ${{fromJSON(needs.setup.outputs.packages).test-utils}}
    name: test-utils
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-test-utils.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).test-utils)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
  test-server:
    needs: [ setup, utils ]
    if: ${{fromJSON(needs.setup.outputs.packages).test-server}}
    name: test-server
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Run remote workflow
        uses: ./.github/actions/run
        with:
          workflow: publish-test-server.yml
          inputs: ${{toJSON(fromJSON(needs.setup.outputs.packages).test-server)}}
        env:
          GITHUB_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}
