name: "Java - Tests"

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    paths:
      - 'java/**'

  workflow_dispatch:
    inputs:
      generic_tests_selenium:
        description: Generic Selenium SDK Tests
        type: boolean
        required: false
        default: true
      generic_tests_playwright:
        description: Generic Playwright SDK Tests
        type: boolean
        required: false
        default: true
      selenium_tests:
        description: Selenium Tests
        type: boolean
        required: false
        default: true
      appium_tests:
        description: Appium SDK Tests
        type: boolean
        required: false
        default: true
      images_tests:
        description: Images SDK Tests
        type: boolean
        required: false
        default: true
      playwright_tests:
        description: Playwright SDK tests
        type: boolean
        required: false
        default: true

env:
  JAVA_VERSION: 11
  APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
  APPLITOOLS_API_KEY_READ: ${{ secrets.APPLITOOLS_API_KEY_READ }}
  APPLITOOLS_API_KEY_TEST_EYES: ${{ secrets.APPLITOOLS_API_KEY_TEST_EYES }}
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Log info
        run: |
          echo "Starting CI Tests"

  core-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Test
        uses: ./.github/actions/java/tests/
        with:
          working-directory: ./java/eyes.sdk.core
          java-version: ${{ env.JAVA_VERSION }}

  appium-tests:
    needs: setup
    if: ${{ !(github.event_name == 'workflow_dispatch') || inputs.appium_tests }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Test
        uses: ./.github/actions/java/tests/
        with:
          working-directory: ./java/eyes.appium.java
          java-version: ${{ env.JAVA_VERSION }}

  selenium-tests:
    needs: setup
    if: ${{ !(github.event_name == 'workflow_dispatch') || inputs.selenium_tests }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Test
        uses: ./.github/actions/java/tests/
        with:
          working-directory: ./java/eyes.selenium.java
          test-type: unit it e2e
          java-version: ${{ env.JAVA_VERSION }}

  playwright-tests:
    needs: setup
    if: ${{ !(github.event_name == 'workflow_dispatch') || inputs.playwright_tests }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Test
        uses: ./.github/actions/java/tests/
        with:
          working-directory: ./java/eyes.playwright.java
          test-type: unit it e2e
          java-version: ${{ env.JAVA_VERSION }}

  arm64-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          lfs: true
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: "maven"
      - uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu18.04
          githubToken: ${{ github.token }}
          install: |
            set -e
            apt-get update
            apt-get install --no-install-recommends -y ca-certificates maven
          run: |
            cd java
            mvn clean install -DskipTests 
            cd eyes.universal.core/eyes-universal-core
            mvn test -Dtest="TestCoreBinaries#testArm64Binaries"

  alpine-tests:
    needs: setup
    runs-on: ubuntu-latest
    container: "alpine:latest"
    steps:
      - name: Installing dependencies
        run: |
          apk update
          apk add git
          apk add git-lfs
          apk add maven
          apk add --no-cache openjdk11
          apk add --no-cache libstdc++
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set Java path
        run: echo "JAVA_HOME=$(readlink -f /usr/bin/javac | sed 's:/bin/javac::')" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Clean install
        run: |
          cd java
          mvn clean install -DskipTests
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

      - name: Test
        run: |
          cd java/eyes.universal.core/eyes-universal-core
          mvn test -Dtest="TestCoreBinaries#testAlpineBinaries"
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

  windows-tests:
    needs: setup
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: "maven"

      - name: Clean install
        run: |
          cd java
          mvn clean install -DskipTests 

      - name: Test
        run: |
          cd java/eyes.universal.core/eyes-universal-core
          mvn test -Dtest="TestCoreBinaries#testWindowsBinaries"

  macos-tests:
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: "maven"

      - name: Clean install
        run: |
          cd java
          mvn clean install -DskipTests 

      - name: Test
        run: |
          cd java/eyes.universal.core/eyes-universal-core
          mvn test -Dtest="TestCoreBinaries#testMacosBinaries"


  images-tests:
    needs: setup
    if: ${{ !(github.event_name == 'workflow_dispatch') || inputs.images_tests }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Test
        uses: ./.github/actions/java/tests/
        with:
          working-directory: ./java/eyes.images.java
          java-version: ${{ env.JAVA_VERSION }}

  generic-tests-selenium:
    needs: setup
    if: ${{ !(github.event_name == 'workflow_dispatch') || inputs.generic_tests_selenium }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Test
        uses: ./.github/actions/java/tests/
        with:
          working-directory: ./java/eyes.selenium.java
          test-type: coverage
          java-version: ${{ env.JAVA_VERSION }}

      - name: Save testing artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-selenium
          retention-days: 2
          if-no-files-found: ignore
          path: |
            /tmp/applitools-logs/*

  generic-tests-playwright:
    needs: setup
    if: ${{ !(github.event_name == 'workflow_dispatch') || inputs.generic_tests_playwright }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Test
        uses: ./.github/actions/java/tests/
        with:
          working-directory: ./java/eyes.playwright.java
          test-type: coverage
          java-version: ${{ env.JAVA_VERSION }}

      - name: Save testing artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-playwright
          retention-days: 2
          if-no-files-found: ignore
          path: |
            /tmp/applitools-logs/*
