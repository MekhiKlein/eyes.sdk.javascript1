name: Publish - sdk storybook

on:
  workflow_dispatch:
    inputs:
      version:
        description: version type
        type: choice
        options: [patch, minor, major]
        default: patch
      multienv:
        description: test on multiple environments
        type: boolean
        default: true
  workflow_call:
    inputs:
      version:
        description: version type
        type: string
        default: minor
    secrets:
      NPM_TOKEN:
        required: true
      APPLITOOLS_API_KEY:
        required: true
      APPLITOOLS_API_KEY_SDK:
        required: true
      APPLITOOLS_API_KEY_READ:
        required: true
env:
  PACKAGE_DIR: eyes-storybook
  FORCE_COLOR: 3
  STDOUT_LEVEL: 1
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  APPLITOOLS_API_KEY: ${{secrets.APPLITOOLS_API_KEY}}
  APPLITOOLS_API_KEY_SDK: ${{secrets.APPLITOOLS_API_KEY_SDK}}
  APPLITOOLS_API_KEY_READ: ${{secrets.APPLITOOLS_API_KEY_READ}}
jobs:
  verify:
    name: Verification
    runs-on: ubuntu-latest
    outputs:
      versions: ${{steps.prepare.outputs.versions}}
    steps:
      - name: Prepare versions
        id: prepare
        shell: bash
        run: | 
          echo "::set-output name=versions::[{\"storybook-version\":5.0.0}, {\"storybook-version\":6.0.0}]"
  test:
    needs: [verify]
    strategy:
      max-parallel: 3
      matrix:
        include: ${{fromJSON(needs.verify.outputs.versions)}}
    name: 'Test (storybook: ${{matrix.storybook-version}})'
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org
        env:
          STORYBOOK_VERSION: ${{matrix.storybook-version}}
      - name: Run tests
        uses: ./.github/actions/tests
        with:
          package: ${{env.PACKAGE_DIR}}
