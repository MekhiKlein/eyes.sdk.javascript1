name: Publish

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    # branches: 
    #   - '**'

permissions:
  packages: write
  contents: read

concurrency: 
  group: ${{github.event_name == 'pull_request' && github.ref || github.run_id }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      packages: ${{steps.setup.outputs.packages}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup
        uses: ./.github/actions/parser
        id: setup
        with:
          packages: changed
  publish:
    needs: [setup]
    strategy:
      fail-fast: false
      matrix: 
        include: ${{fromJSON(needs.setup.outputs.packages).*}}
    name: ${{matrix.displayName}}
    runs-on: ${{matrix.params.runner}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://npm.pkg.github.com/
          always-auth: true
      - name: Install global dependencies
        run: yarn install --frozen-lockfile
      - name: Install packages dependencies
        working-directory: ${{matrix.path}}
        run: yarn install --frozen-lockfile
      - name: Build
        working-directory: ${{matrix.path}}
        run: yarn build
      - name: Publish
        working-directory: ${{matrix.path}}
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.RUN_GITHUB_TOKEN}}