name: Ruby build
description: Build Ruby SDK Packages

inputs:
  working-directory:
    description: the path to the directory from repository root
    type: string
    required: true
  server-build:
    description: flag for js binaries
    type: boolean
    required: false

runs:
  using: composite
  steps:
    - name: Get binaries
      if: ${{inputs.server-build}}
      working-directory: .
      shell: bash
      env:
        GH_TOKEN: ${{github.token}}
        JS_CORE_BIN: js/packages/core/bin
      run: |
        if [[ (-d "$JS_CORE_BIN") ]]; then
          echo "binaries path correct $JS_CORE_BIN ; using it"
          ls $JS_CORE_BIN
          tar -czf ./ruby/eyes_universal/ext/eyes-universal/core.tar.gz $JS_CORE_BIN/core-*
          chmod +x $JS_CORE_BIN/core-linux
          $JS_CORE_BIN/core-linux --version
        else
          echo "no binaries in $JS_CORE_BIN ; using script"
          ./scripts/download-core-bin.sh --dir "./ruby/eyes_universal/ext/eyes-universal"
          tar -czf ./ruby/eyes_universal/ext/eyes-universal/core.tar.gz ./ruby/eyes_universal/ext/eyes-universal/core-*
          chmod +x ./ruby/eyes_universal/ext/eyes-universal/core-linux
          ./ruby/eyes_universal/ext/eyes-universal/core-linux --version
        fi
    - name: Build Gems
      if: ${{inputs.test-type != 'eyes_images'}}
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        rake build
    - name: Build Gems
      if: ${{inputs.test-type == 'eyes_images'}}
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        gem install rspec
        rake build
    - name: Temporary Fix
      if: ${{inputs.working-directory == 'ruby/eyes_calabash'}}
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        cd ..
        cp eyes_universal/pkg/eyes_universal-*.gem eyes_calabash/pkg/
        bundle install
        rake build
        cp pkg/eyes_core-*.gem eyes_calabash/pkg/
        ls eyes_calabash/pkg
        cd eyes_calabash/pkg; mkdir gems; mv ./*.gem ./gems; gem generate_index
    - name: Temporary Fix
      if: ${{inputs.working-directory == 'ruby/eyes_images'}}
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        cd ..
        ls eyes_selenium/pkg/gems
        cp eyes_selenium/pkg/gems/eyes_*.gem eyes_images/pkg/
        ls eyes_images/pkg
        cd eyes_images/pkg; mkdir gems; mv ./*.gem ./gems; gem generate_index
    - name: Temporary Fix
      if: ${{inputs.working-directory == 'ruby/eyes_appium'}}
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        cd ..
        cp eyes_universal/pkg/eyes_universal-*.gem eyes_appium/pkg/
        ls eyes_selenium/pkg/gems
        cp eyes_selenium/pkg/gems/eyes_selenium-*.gem eyes_appium/pkg/
        bundle install
        rake build
        cp pkg/eyes_core-*.gem eyes_appium/pkg/
        ls eyes_appium/pkg
        cd eyes_appium/pkg; mkdir gems; mv ./*.gem ./gems; gem generate_index
    - name: Temporary Fix
      if: ${{inputs.working-directory == 'ruby/eyes_selenium'}}
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        cd ..
        cp eyes_universal/pkg/eyes_universal-*.gem eyes_selenium/pkg/
        bundle install
        rake build
        cp pkg/eyes_core-*.gem eyes_selenium/pkg/
        ls eyes_selenium/pkg
        cd eyes_selenium/pkg; mkdir gems; mv ./*.gem ./gems; gem generate_index
    - name: Temporary Fix
      if: ${{inputs.working-directory == 'ruby/eyes_capybara'}}
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        gem install builder
        cd ..
        ls eyes_selenium/pkg/gems
        cp eyes_selenium/pkg/gems/eyes_*.gem eyes_capybara/pkg/
        ls eyes_capybara/pkg
        cd eyes_capybara/pkg; mkdir gems; mv ./*.gem ./gems; gem generate_index
