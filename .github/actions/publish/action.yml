name: Publish
description: Publish a package to NPM
inputs:
  package:
    description: name of the package
    required: true
  version:
    description: version type (patch, major, minor)
    required: true
  skip-npm:
    description: should the package be published in npm
    default: false
outputs:
  tag:
    description: name of the tag pushed after publishing
    value: ${{steps.publish.outputs.tag}}

runs:
  using: composite
  steps:
    - id: publish
      shell: bash
      working-directory: ./packages/${{inputs.package}}
      run: |
        echo "::group::Configure NPM"
        echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
        echo "registry=https://registry.npmjs.org/" >> .npmrc
        echo "always-auth=true" >> .npmrc
        echo "::endgroup::"

        echo "::group::Configure Git"
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        TEMP_BRANCH="${{inputs.package}}_$(date +%F_%H-%M)"
        git checkout -b $TEMP_BRANCH
        git push -u origin $TEMP_BRANCH
        echo "::notice::Publish branch - $TEMP_BRANCH"
        echo "::endgroup::"

        echo "::group::Installing and updating dependencies"
        yarn install
        npm run deps --if-present -- --commit
        echo "::endgroup::"

        echo "::group::Building package"
        npm run build --if-present
        echo "::endgroup::"

        echo "::group::Publish ${{inputs.package}}"
        if [ "${{inputs.skip-npm}}" = "false" ]; then yarn publish "--${{inputs.version}}"; else yarn version "--${{inputs.version}}"; fi
        TAG="$(git describe --tags --abbrev=0)"
        echo "::notice::Publish tag - $TAG"
        echo "::set-output name=tag::$TAG"
        echo "::endgroup::"

        echo "::group::Merge publish branch into ${{github.ref}}"
        GH_REF=${{github.ref}}
        CURRENT_BRANCH=${GH_REF#refs/heads/}
        git checkout $CURRENT_BRANCH
        git status
        git pull origin $CURRENT_BRANCH --rebase
        git merge $TEMP_BRANCH
        git push origin $CURRENT_BRANCH
        echo "::endgroup::"
