# frozen_string_literal: true

require 'rake/clean'
require 'securerandom'

require 'bundler/gem_helper'
# Monkey patch the Bundler release class to change tags for eyes_images
module Bundler
  class GemHelper

    def version_tag
      ruby_tag = "@applitools/ruby"
      "#{ruby_tag}/#{gemspec.name}@#{version}"
    end

  end
end

Bundler::GemHelper.install_tasks

namespace 'github' do
  task :set_batch_info do
    batch_id = SecureRandom.uuid
    # next if ENV['APPLITOOLS_BATCH_ID'] && !ENV['APPLITOOLS_BATCH_ID'].empty?
    ENV['APPLITOOLS_DONT_CLOSE_BATCHES'] = 'true'
    ENV['APPLITOOLS_BATCH_ID'] = batch_id unless ENV['APPLITOOLS_BATCH_ID'] && !ENV['APPLITOOLS_BATCH_ID'].empty?
    ENV['APPLITOOLS_BATCH_NAME'] = "Eyes Ruby SDK(#{RUBY_VERSION} | #{RUBY_PLATFORM})"
  end

  task :check do
    puts "Batch ID: #{ENV['APPLITOOLS_BATCH_ID']}"
    puts "Batch NAME: #{ENV['APPLITOOLS_BATCH_NAME']}"
  end

  # require 'rspec/core/rake_task'
  # namespace :unit_tests do
  #   RSpec::Core::RakeTask.new(:core) do |t|
  #     t.pattern = 'spec/core'
  #   end
  #
  #   RSpec::Core::RakeTask.new(:visual_grid) do |t|
  #     t.pattern = 'spec/visual_grid'
  #   end
  #
  #   RSpec::Core::RakeTask.new(:selenium) do |t|
  #     t.pattern = 'spec/selenium'
  #   end
  #
  #   RSpec::Core::RakeTask.new(:regression) do |t|
  #     t.pattern = 'spec/regression'
  #   end
  #
  #   RSpec::Core::RakeTask.new(:bugfix) do |t|
  #     t.pattern = 'spec/bugfix'
  #   end
  #
  #   RSpec::Core::RakeTask.new(:calabash) do |t|
  #     t.pattern = 'spec/calabash'
  #   end
  #
  #   RSpec::Core::RakeTask.new(:images) do |t|
  #     t.pattern = 'spec/images'
  #   end
  #
  #   task :github => [:regression, :bugfix, :core, :selenium, :visual_grid, :calabash, :images]
  # end
  #
  # task :unit_tests => [:set_batch_info, :check, 'unit_tests:github']
  #
  # task :vg_tests => [:set_batch_info, :check] do
  #   sh('bundle exec parallel_rspec -n 1 -- --tag visual_grid -- spec/integration/*_spec.rb')
  # end

  # task :travis_selenium => ['webdrivers:chromedriver:update', :set_batch_info, :check] do
  #   sh('bundle exec parallel_rspec -n 4 -- --tag selenium -- spec/integration/*_spec.rb')
  # end
  #
  # task :travis_vg => ['webdrivers:chromedriver:update', :set_batch_info, :check] do
  #   sh('bundle exec parallel_rspec -n 1 -- --tag visual_grid -- spec/integration/*_spec.rb')
  # end

  # task :vg_tests => ['webdrivers:chromedriver:update', :set_batch_info, :check] do
  #   sh('bundle exec parallel_rspec -n 1 -- --tag visual_grid -- spec/integration/*_spec.rb')
  # end

end
